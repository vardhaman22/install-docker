name: Generate Files and Raise PR

on: workflow_dispatch


permissions:
  contents: write
  pull-requests: write


jobs:
  generate_and_raise_pr:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - uses: actions/setup-python@d27e3f3d7c64b4bbf8e4abfb9b63b83e846e0435 # v4.5.0
        with:
          python-version: '3.10'
          cache: 'pip'
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Pip
        working-directory: ./auto-add-new-versions
        run: pip install -r requirements.txt
      
      - name: Check if new versions available
        id: check-versions
        run: |
          python auto-add-new-versions/check-for-new-versions.py
        env:
          EXCLUDED_VERSIONS: ${{ vars.EXCLUDED_VERSIONS }}
      
      - name: check if the PR exist
        if: ${{ env.PR_TITLE != '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_TITLE: ${{env.PR_TITLE}}
        run: |
          EXISTING_PR=$(gh pr list --limit 1500 --json title,url | jq --arg title "${PR_TITLE}" -r '.[] | select(.title==$title) | .url')
          if [ -n "${EXISTING_PR}" ]; then
            echo "pr_exist=true" >> $GITHUB_ENV
            echo "Pull request already exists: ${EXISTING_PR}" >> $GITHUB_STEP_SUMMARY
          else 
            echo "pr_exist=false" >> $GITHUB_ENV
          fi
      
      - name: generate files for new docker version
        if: ${{ env.pr_exist == 'false' && env.PR_TITLE != '' }}
        env:
          NEW_VERSIONS: ${{ env.NEW_VERSIONS }}
        run: |
          python auto-add-new-versions/gen-new-version-files.py

      - name: Create branch, commit and push
        if: ${{ env.pr_exist == 'false' && env.PR_TITLE != '' }}
        id: branch
        run: |
          BRANCH="gha-add-tag-${GITHUB_RUN_ID}-${GITHUB_RUN_ATTEMPT}"
          echo "branch=${BRANCH}" >> $GITHUB_OUTPUT
          git config user.name github-actions
          git config user.email github-actions@github.com
          git checkout -b "$BRANCH"
          git add .
          git commit -m "added new docker versions"
          git push origin "$BRANCH"

      - name: Create Pull Request
        if: ${{ env.pr_exist == 'false' && env.PR_TITLE != '' }}
        id: cpr
        env:
          SOURCE_BRANCH: ${{ steps.branch.outputs.branch }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_TITLE: ${{env.PR_TITLE}}
          PR_BODY: autogenerated PR to add docker {{env.NEW_VERSIONS}}
        run: |
           PR_TITLE=$(echo "$PR_TITLE" | cut -c -256)
           CREATED_PR=$(gh pr create --title "${PR_TITLE}" --body "${PR_BODY}" --label "status/auto-created" --base "${GITHUB_REF_NAME}" --head "${SOURCE_BRANCH}")
