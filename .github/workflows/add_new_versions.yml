name: Generate Files and Raise PR

on: workflow_dispatch

permissions:
  contents: write
  pull-requests: write


jobs:
  generate_and_raise_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Run Python script to generate files
        run: python auto-add-new-versions/auto-add-new-versions.py

      - name: Check for repository changes
        run: |
          if git diff --name-only --exit-code; then
            echo "No changes found in repository"
            echo "changes_exist=false" >> $GITHUB_ENV
          else
            echo "Changes found in repository"
            git diff --name-only
            echo "changes_exist=true" >> $GITHUB_ENV
          fi

      - name: Create branch, commit and push
        if: ${{ env.changes_exist == 'true' }}
        id: branch
        run: |
          BRANCH="gha-add-tag-${GITHUB_RUN_ID}-${GITHUB_RUN_ATTEMPT}"
          echo "branch=${BRANCH}" >> $GITHUB_OUTPUT
          git config --global user.email "maans406@gmail.com"
          git config --global user.name "vardhaman surana"
          git checkout -b "$BRANCH"
          git commit -a -m "added new docker versions"
          git push origin "$BRANCH"
      
      - name: Create Pull Request
        if: ${{ env.changes_exist == 'true' }}
        id: cpr
        env:
          SOURCE_BRANCH: ${{ steps.branch.outputs.branch }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            PR_TITLE=$(echo "$PR_TITLE" | cut -c -256)
            EXISTING_PR=$(gh pr list --limit 1500 --json title,url | jq --arg title "${PR_TITLE}" -r '.[] | select(.title==$title) | .url')
            
            CREATED_PR=$(gh pr create --title "${PR_TITLE}" --body "${PR_BODY}" --label "status/auto-created" --base "${GITHUB_REF_NAME}" --head "${SOURCE_BRANCH}")
            echo "Created pull request: ${CREATED_PR}" >> $GITHUB_STEP_SUMMARY
